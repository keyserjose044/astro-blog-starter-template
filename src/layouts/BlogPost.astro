---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

/** Props work for BOTH collection posts and regular pages */
interface Props {
  title: string;
  description?: string;
  pubDate?: Date | string;
  updatedDate?: Date | string;
  heroImage?: string;
  /** Optional: extra-wide on desktop */
  wide?: boolean;
  /** Optional per-page override for hero style if ever needed */
  heroImageStyle?: string;
}

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  wide = false,
} = Astro.props as Props;

/** Safe date normalizer */
function toValidDate(v: unknown): Date | null {
  if (!v) return null;
  if (v instanceof Date) return isNaN(v.getTime()) ? null : v;
  const d = new Date(String(v));
  return isNaN(d.getTime()) ? null : d;
}

const pub = toValidDate(pubDate);
const upd = toValidDate(updatedDate);
const hasPub = !!pub;
const hasUpd = !!upd;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      :root {
        /* Base reading width */
        --prose-max: 68ch; /* ~720px at default font size */
        --shadow: 0 4px 16px rgba(0,0,0,0.08);

        /* Fluid type scale */
        --step--1: clamp(0.95rem, 0.9rem + 0.2vw, 1rem);
        --step-0:  clamp(1rem, 0.95rem + 0.35vw, 1.1rem);
        --step-1:  clamp(1.15rem, 1.05rem + 0.6vw, 1.3rem);
        --step-3:  clamp(1.6rem, 1.2rem + 2vw, 2.2rem);
      }

      /* Widen on tablets/desktops */
      @media (min-width: 900px) {
        :root {
          --prose-max: clamp(60ch, 90vw, 1100px);
        }
      }

      /* If a page passes `wide`, allow extra on large screens */
      @media (min-width: 1200px) {
        .prose--wide {
          --prose-max: clamp(60ch, 90vw, 1280px);
        }
      }

      main { width: 100%; margin: 0; }

      .wrap {
        width: 100%;
        max-width: var(--prose-max);
        margin: 0 auto;               /* centered at all sizes */
        padding: 0 1rem 2.25rem;      /* cozy side padding on mobile */
      }
      @media (max-width: 360px) {
        .wrap { padding-inline: 0.75rem; }
      }

      .hero-image {
        width: 100%;
        margin: 0 auto 0.75rem;
        text-align: center; /* centers portrait images horizontally */
      }

      .hero-image img {
        display: block;
        width: 100%;
        height: auto;                            /* keep aspect ratio */
        max-height: clamp(180px, 35vh, 420px);   /* cap hero on phones */
        object-fit: cover;                       /* tidy crop */
        border-radius: 12px;
        box-shadow: var(--shadow);
      }

      .prose {
        max-width: var(--prose-max);
        margin: 0 auto;
        color: rgb(var(--gray-dark));
        line-height: 1.7;
        font-size: var(--step-0);
      }

      .title {
        margin-bottom: 0.75em;
        padding: 0.85em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.4em 0;
        font-size: var(--step-3);
      }
      .date {
        margin-bottom: 0.25em;
        color: rgb(var(--gray));
      }
      .last-updated-on { font-style: italic; }

      /* Make embedded media & long content behave on small screens */
      .prose img, .prose video { max-width: 100%; height: auto; }
      .prose table { display: block; width: 100%; overflow-x: auto; -webkit-overflow-scrolling: touch; }
      .prose pre { overflow-x: auto; -webkit-overflow-scrolling: touch; }
      .prose code { font-size: var(--step--1); }
      .prose hr { margin: 1.25rem 0; }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article class={`wrap ${wide ? 'prose--wide' : ''}`}>
        {heroImage && (
          <div class="hero-image">
            <img
              src={heroImage}
              alt={title}
              loading="eager"
              sizes="(max-width: 600px) 100vw, (max-width: 1100px) 90vw, 1100px"
              style={Astro.props.heroImageStyle}
            />
          </div>
        )}

        <div class="prose">
          <div class="title">
            {(hasPub || hasUpd) && (
              <div class="date">
                {hasPub && <FormattedDate date={pub!} />}
                {hasUpd && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={upd!} />
                  </div>
                )}
              </div>
            )}
            <h1>{title}</h1>
            <hr />
          </div>

          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
