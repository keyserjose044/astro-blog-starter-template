---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

// Exclude drafts and sort safely
const posts = (await getCollection('blog', ({ data }) => data?.draft !== true))
  .map((p) => ({
    ...p,
    _pub: p.data?.pubDate instanceof Date
      ? p.data.pubDate
      : new Date(p.data?.pubDate ?? 0),
  }))
  .sort((a, b) => (b._pub?.valueOf?.() ?? 0) - (a._pub?.valueOf?.() ?? 0));
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={`${SITE_TITLE} — Blog`} description={SITE_DESCRIPTION} />
    <style>
      :root {
        --list-max: clamp(60ch, 90vw, 1100px); /* desktop container */
        --read-max: 72ch;                      /* phone container */
      }

      /* Keep this page from drifting horizontally on any device */
      html, body { max-width: 100%; overflow-x: hidden; }

      main { width: 100%; margin: 0; }

      /* Shared wrapper – matches BlogPost.astro behavior */
      .wrap {
        width: 100%;
        max-width: var(--list-max);
        margin: 0 auto;
        padding: 2rem 1rem;
        box-sizing: border-box; /* padding stays inside max-width */
      }

      /* Card list: 2-up on desktop, featured first spans both */
      ul {
        display: grid;
        grid-template-columns: repeat(2, minmax(0, 1fr));
        gap: 2rem;
        list-style: none;
        margin: 0;
        padding: 0;
      }

      li a { display: block; text-decoration: none; transition: 0.2s ease; }
      .title { margin: 0.5rem 0 0; color: rgb(var(--black)); line-height: 1.1; }
      .date  { margin: 0; color: rgb(var(--gray)); }

      /* First (featured) post takes full row */
      ul li:first-child { grid-column: 1 / -1; text-align: center; }

      /* Thumbnails */
      .thumb {
        display: block;
        width: 100%;
        height: auto;
        border-radius: 12px;
      }
      /* Portrait opt-in (if post supplies heroImageStyle) */
      .thumb.portrait {
        width: auto;
        max-width: 100%;
        height: auto;
        margin-inline: auto;
        object-fit: contain;
      }
      /* Featured hero stays uncropped but capped */
      ul li:first-child .thumb {
        width: 100%;
        height: auto;
        max-height: 600px;
        object-fit: contain;
      }

      ul a:hover img { box-shadow: var(--box-shadow); }
      ul li a:hover h4, ul li a:hover .date { color: rgb(var(--accent)); }

      /* =================== MOBILE-ONLY CENTERING =================== */
      @media (max-width: 768px) {
        /* Center the whole page column on phones (matches posts) */
        .wrap {
          max-width: var(--read-max);
          margin-inline: auto !important;
          padding-inline: clamp(16px, 4vw, 24px) !important;
        }

        /* 1 column list, center cards and media */
        ul {
          grid-template-columns: 1fr !important;
          gap: clamp(12px, 3vw, 20px);
          justify-items: center; /* centers items with intrinsic width */
        }

        /* Calm headings a bit on small screens */
        h1, .title { font-size: clamp(1.1rem, 4.5vw, 1.35rem); }

        /* Ensure images never overflow and stay centered */
        img, figure, video {
          display: block;
          max-width: 100%;
          height: auto;
          margin-inline: auto;
        }
      }
      /* ============================================================ */
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section class="wrap">
        <ul>
          {posts.map((post) => {
            const isPortrait = Boolean(post.data?.heroImageStyle);
            return (
              <li>
                <a href={`/blog/${post.slug}/`}>
                  {post.data.heroImage && (
                    <img
                      class={`thumb ${isPortrait ? 'portrait' : ''}`}
                      src={post.data.heroImage}
                      alt=""
                      loading="lazy"
                      style={isPortrait ? post.data.heroImageStyle : undefined}
                    />
                  )}
                  <h4 class="title">{post.data.title}</h4>
                  <p class="date"><FormattedDate date={post._pub} /></p>
                </a>
              </li>
            );
          })}
        </ul>
      </section>
    </main>
    <Footer />
  </body>
</html>
