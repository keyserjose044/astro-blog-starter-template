---
// src/pages/templates.astro
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import BaseHead from '../components/BaseHead.astro';

// GitHub Pagesâ€“safe base URL handling
const rawBase = import.meta.env.BASE_URL || '/';
const base = rawBase.endsWith('/') ? rawBase : `${rawBase}/`;

type Item = {
  title: string;
  description?: string;
  href: string; // download link
  filetype: 'Google Sheet' | 'Excel' | 'PDF' | 'Word' | 'ZIP' | 'Other';
  updated?: string;
  imageSrc?: string;
  imageAlt?: string;
  imageOrientation?: 'portrait' | 'landscape';
  postUrl?: string; // optional link to blog post
};

const templates: Item[] = [
  {
    title: 'Weekly To-Do List Template',
    description: 'Simple, customizable weekly list with weekday blocks.',
    href: `${base}templates/Original-To-Do-List-Template.docx`,
    filetype: 'Word',
    updated: 'Oct 2025',
    imageSrc: `${base}templates/covers/todo-cover.png`,
    imageAlt: 'Preview of the To-Do List Template',
    imageOrientation: 'portrait',
  },
  {
    title: 'Research Paper Fill-In Template',
    description: 'Structured template for organized paper notes.',
    href: `${base}templates/Research-Paper-Fill-In-Template.docx`,
    filetype: 'Word',
    updated: 'Oct 2025',
    imageSrc: `${base}templates/covers/research-template-cover.png`,
    imageAlt: 'Preview of the Research Paper Fill-In Template',
    imageOrientation: 'portrait',
    postUrl: `${base}blog/research-paper-fill-in-template/`,
  },
];
---

<html lang="en">
  <head>
    <BaseHead
      title="Templates â€¢ Downloads"
      description="Download LifeLoggerz templates and tools."
    />
    <style>
      :root {
        --bg: #ffffff;
        --text: #0e121b;
        --muted: #5b6473;
        --accent: #405cf5;
        --ring: rgba(64, 92, 245, 0.25);
        --card: #f8fafc;
        --border: #e5e7eb;
        --list-max: clamp(60ch, 90vw, 1100px);
        --read-max: 72ch;
      }

      html, body { max-width: 100%; overflow-x: hidden; background: var(--bg); }
      main { width: 100%; margin: 0; }

      .wrap {
        width: 100%;
        max-width: var(--list-max);
        margin: 0 auto;
        padding: 2rem 1rem 4rem;
        box-sizing: border-box;
        text-align: center;
      }

      .page-title {
        margin: 1.5rem 0 0.5rem;
        font-size: clamp(1.6rem, 2.5vw, 2rem);
        font-weight: 800;
      }

      .subtitle {
        color: var(--muted);
        margin-bottom: 2rem;
        font-size: 1.05rem;
      }

      .grid {
        display: grid;
        grid-template-columns: repeat(12, 1fr);
        gap: 1rem;
        text-align: left;
      }

      .card {
        grid-column: span 12;
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: 16px;
        overflow: hidden;
        display: flex;
        flex-direction: column;
      }

      @media (min-width: 720px) { .card { grid-column: span 6; } }
      @media (min-width: 1024px) { .card { grid-column: span 4; } }

      /* Image previews */
      .thumb {
        display: block;
        background: #f8fafc;
        border-bottom: 1px solid var(--border);
        overflow: hidden;
        border-radius: 16px 16px 0 0;
      }
      .thumb.portrait { aspect-ratio: 3 / 4; }
      .thumb.landscape { aspect-ratio: 16 / 9; }
      .thumb img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        background: white;
        padding: 0.25rem;
        transition: transform 0.3s ease;
        display: block;
      }
      .thumb:hover img { transform: scale(1.03); }

      .content {
        padding: 1rem;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
      }

      .eyebrow {
        font-size: 0.8rem;
        color: var(--muted);
        letter-spacing: 0.04em;
        text-transform: uppercase;
      }

      .card h3 {
        margin: 0.15rem 0 0.15rem;
        font-size: 1.05rem;
      }

      .desc {
        color: var(--muted);
        font-size: 0.95rem;
      }

      .meta {
        font-size: 0.85rem;
        color: var(--muted);
        display: flex;
        gap: 0.75rem;
      }

      .actions {
        display: flex;
        justify-content: center;
        margin-top: 0.6rem;
      }

      .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.6rem 1.2rem;
        border-radius: 9999px;
        font-weight: 700;
        border: 1px solid var(--accent);
        text-decoration: none;
        background: var(--accent);
        color: white;
        box-shadow: 0 6px 20px var(--ring);
        transition: transform 0.04s ease, box-shadow 0.2s ease, background 0.2s ease;
      }
      .btn:hover { transform: translateY(-1px); }

      /* =============== MOBILE-ONLY CENTERING =============== */
      @media (max-width: 768px) {
        .wrap {
          max-width: var(--read-max);
          margin-inline: auto !important;
          padding-inline: clamp(16px, 4vw, 24px) !important;
        }
      
        .grid {
          grid-template-columns: 1fr !important;
          gap: clamp(12px, 3vw, 20px);
          justify-items: center;
          text-align: center;
        }
      
        /* ðŸ§½ Reset the desktop span that caused overflow */
        .card {
          grid-column: 1 / -1 !important;   /* or: grid-column: auto !important; */
          width: 100%;
        }
      
        /* keep images centered & contained */
        img, figure, video {
          display: block;
          max-width: 100%;
          height: auto;
          margin-inline: auto;
        }
      }
      /* ===================================================== */
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section class="wrap">
        <h1 class="page-title">Templates & Downloads</h1>
        <p class="subtitle">
          Ready-to-use files for time-tracking, research, and productivity.
        </p>

        <section class="grid">
          {templates.map((t) => (
            <article class="card">
              {t.imageSrc && (
                <a
                  class:list={[
                    'thumb',
                    (t.imageOrientation ?? 'portrait') === 'landscape'
                      ? 'landscape'
                      : 'portrait',
                  ]}
                  href={t.postUrl ?? t.href}
                  {...(t.postUrl ? {} : { download: true })}
                >
                  <img src={t.imageSrc} alt={t.imageAlt ?? t.title} loading="lazy" />
                </a>
              )}
              <div class="content">
                <div class="eyebrow">{t.filetype}</div>
                <h3>{t.title}</h3>
                {t.description && <p class="desc">{t.description}</p>}
                {t.updated && (
                  <div class="meta">
                    <span>Updated: {t.updated}</span>
                  </div>
                )}
                <div class="actions">
                  <a class="btn" href={t.href} download>Download</a>
                </div>
              </div>
            </article>
          ))}
        </section>
      </section>
    </main>
    <Footer />
  </body>
</html>
