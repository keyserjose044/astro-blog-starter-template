---
const RAINDROP_TOKEN = "2df3b611-fa2c-4794-a359-1bf08efdd67f";   // your token
const COLLECTION_ID = "54514877";   // Books collection ID

async function fetchAllRaindrops() {
  const perPage = 200; // Raindrop supports ~200/page
  let page = 0;
  let items = [];
  while (true) {
    const res = await fetch(
      `https://api.raindrop.io/rest/v1/raindrops/${COLLECTION_ID}?perpage=${perPage}&page=${page}`,
      { headers: { Authorization: `Bearer ${RAINDROP_TOKEN}` } }
    );
    if (!res.ok) {
      const t = await res.text();
      throw new Error(`Raindrop fetch failed (${res.status}): ${t}`);
    }
    const json = await res.json();
    const batch = json.items ?? [];
    items = items.concat(batch);
    if (batch.length < perPage) break;
    page++;
  }
  return items.map((it) => ({
    id: it._id,
    title: it.title ?? "Untitled",
    href: it.link ?? "#",
    cover: it.cover || (it.media?.[0]?.link ?? ""),
    tags: it.tags ?? [],
  }));
}

const books = await fetchAllRaindrops();
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Bookshelf</title>
    <meta name="description" content="My Raindrop-powered bookshelf." />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style>
      :root { --gap: 16px; --max: 1200px; }
      body { margin: 0; font-family: system-ui, -apple-system, Segoe UI, Roboto, sans-serif; background: #0f1115; color: #e7e9ee; }
      .wrap { max-width: var(--max); margin: 0 auto; padding: 24px; }
      h1 { margin: 0 0 12px; font-weight: 700; }
      .hint { opacity: .7; margin-bottom: 24px; }
      .grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
        gap: var(--gap);
        align-items: start;
      }
      .card { display: flex; flex-direction: column; gap: 8px; text-decoration: none; color: inherit; }
      .thumb {
        width: 100%; aspect-ratio: 3/4; object-fit: cover; border-radius: 12px;
        box-shadow: 0 10px 24px rgba(0,0,0,.35); background: #1a1d25;
      }
      .title { font-weight: 600; font-size: 0.95rem; line-height: 1.3; }
      .tags { opacity: .7; font-size: .8rem; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
      .card:focus-visible { outline: 2px solid #9aa8ff; outline-offset: 4px; border-radius: 12px; }
      input[type="search"] {
        width: 100%; max-width: 420px; padding: 10px 12px; border-radius: 10px; border: 1px solid #2a2f3a; background: #151821; color: #e7e9ee;
      }
    </style>
  </head>
  <body>
    <main class="wrap">
      <h1>ðŸ“š My Bookshelf</h1>
      <p class="hint">Powered by Raindrop. Start typing to filter.</p>
      <input id="q" type="search" placeholder="Search by title or tagâ€¦" />
      <div class="grid" id="grid">
        {books.map(b => (
          <a class="card" href={b.href} target="_blank" rel="noopener noreferrer" title={b.title} data-title={b.title.toLowerCase()} data-tags={b.tags.join(" ").toLowerCase()}>
            <img class="thumb" src={b.cover} alt={b.title} loading="lazy" />
            <div class="title">{b.title}</div>
            {b.tags?.length ? <div class="tags">#{b.tags.slice(0,3).join('  #')}</div> : null}
          </a>
        ))}
      </div>
      <script>
        const q = document.getElementById('q');
        const cards = [...document.querySelectorAll('.card')];
        q.addEventListener('input', () => {
          const s = q.value.toLowerCase();
          cards.forEach(c => {
            const t = c.dataset.title || '';
            const tags = c.dataset.tags || '';
            c.style.display = (t.includes(s) || tags.includes(s)) ? '' : 'none';
          });
        });
      </script>
    </main>
  </body>
</html>
